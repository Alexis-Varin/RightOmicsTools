[{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with RightOmicsTools","text":"tutorial guide main functions RightOmicsTools package, designed provide complementary tools analysis single-cell RNA-seq data, plotting, data manipulation, . package still development, new functions added future.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with RightOmicsTools","text":"may install package GitHub using devtools package, , don’t , may installed using following command: installed, may install RightOmicsTools using following command:","code":"install.packages(\"devtools\") devtools::install_github(\"Alexis-Varin/RightOmicsTools\")"},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"data-loading","dir":"Articles","previous_headings":"","what":"Data loading","title":"Getting Started with RightOmicsTools","text":"tutorial, use pbmc3k dataset, contains single-cell RNA-seq data peripheral blood mononuclear cells (PBMCs), made available 10X Genomics. also build Seurat package’s pbmc3k tutorial preprocess , available reference . Let’s start loading packages using vignette: Next, load pbmc3k dataset using first function RightOmicsTools, Right_Data, handles data preparation us, check contents: Since object seems contain ‘data’ layer, UMAP reduction annotations, unsure extent preprocessed processed, also test another function RightOmicsTools, Right_DietSeurat, reworked version DietSeurat, remove layers slots object, leaving counts layer RNA assay. also remove meta.data columns except ‘orig.ident’ metadata truly start anew. Right_DietSeurat highly customizable, check documentation information:","code":"library(RightOmicsTools) library(Seurat) library(ggplot2) # Checking available datasets Right_Data(list.datasets = TRUE)  # Loading the data pbmc3k <- Right_Data(\"pbmc3k\")  # Checking the contents of the object pbmc3k colnames(pbmc3k@meta.data) #> Available datasets: #> \"pbmc3k\"   a Seurat v4 object of 2700 cells by 13714 genes #> An object of class Seurat  #> 13714 features across 2700 samples within 1 assay  #> Active assay: RNA (13714 features, 2000 variable features) #>  2 layers present: counts, data #>  1 dimensional reduction calculated: umap #> [1] \"orig.ident\"         \"nCount_RNA\"         \"nFeature_RNA\"       #> [4] \"seurat_annotations\" \"treatment\" # Reducing the object to the counts layer and the 'orig.ident' metadata pbmc3k <- Right_DietSeurat(pbmc3k, idents = \"orig.ident\")  # Checking the contents of the object pbmc3k colnames(pbmc3k@meta.data) #> An object of class Seurat  #> 13714 features across 2700 samples within 1 assay  #> Active assay: RNA (13714 features, 0 variable features) #>  1 layer present: counts #> [1] \"orig.ident\"   \"nCount_RNA\"   \"nFeature_RNA\""},{"path":[]},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"quality-control-and-cell-filtering","dir":"Articles","previous_headings":"Data preprocessing","what":"Quality control and cell filtering","title":"Getting Started with RightOmicsTools","text":"now move preprocessing. start calculating percentage mitochondrial genes plot results alongside number genes (nFeature_RNA) counts (nCount_RNA) per cell:  Based plot , filter cells 10% mitochondrial genes well cells less 400 2500 genes:","code":"# Calculate percentage of mitochondrial genes pbmc3k[[\"percent.mt\"]] <- PercentageFeatureSet(pbmc3k, pattern = \"^MT-\")  # Plot QC ggplot(pbmc3k@meta.data, aes(x = nCount_RNA, y = nFeature_RNA, col = percent.mt)) +    geom_point(size=0.5) +    scale_color_gradientn(colors=c(\"black\",\"blue\",\"green3\",\"yellow3\",\"red3\")) +   ggtitle(\"pbmc3k QC metrics\") +   labs(x = \"Log10(counts)\", y = \"Log10(number of genes)\", col = \"% mito\") +   scale_y_log10() +   scale_x_log10() +   theme_bw() +   theme(panel.border = element_blank(),         panel.grid.major = element_blank(),         panel.grid.minor = element_blank(),         axis.line = element_line(colour = \"black\")) # Filter cells pbmc3k <- subset(pbmc3k, subset = nFeature_RNA > 400 &                               nFeature_RNA < 2500 &                               percent.mt < 10)  # Checking the contents of the object pbmc3k #> An object of class Seurat  #> 13714 features across 2595 samples within 1 assay  #> Active assay: RNA (13714 features, 0 variable features) #>  1 layer present: counts"},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"normalization","dir":"Articles","previous_headings":"Data preprocessing","what":"Normalization","title":"Getting Started with RightOmicsTools","text":"Now filtered cells, move next step, normalizing, scaling data identifying highly variable genes. convenience, use parameters Seurat package tutorial:","code":"# Normalizing the data with default parameters pbmc3k <- NormalizeData(pbmc3k)  # Find highly variable genes with default parameters pbmc3k <- FindVariableFeatures(pbmc3k)  # Scaling all genes, by default it only scales the variable features pbmc3k <- ScaleData(pbmc3k, features = rownames(pbmc3k))"},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"dimensionality-reduction","dir":"Articles","previous_headings":"Data preprocessing","what":"Dimensionality reduction","title":"Getting Started with RightOmicsTools","text":"Next, perform dimensionality reduction unsupervised clustering. use parameters Seurat package tutorial: Finally, plot UMAP, concludes preprocessing steps:  Interestingly, compared Seurat package tutorial, missing platelet cluster, likely due fact drastic cutoff number genes per cell, 400 versus 200. good example preprocessing steps can influence clustering results.","code":"# Perform PCA pbmc3k <- RunPCA(pbmc3k)  # Clustering pbmc3k <- FindNeighbors(pbmc3k, dims = 1:10) pbmc3k <- FindClusters(pbmc3k, resolution = 0.5)  # UMAP pbmc3k <- RunUMAP(pbmc3k, dims = 1:10) # Plot UMAP DimPlot(pbmc3k)"},{"path":[]},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"markers","dir":"Articles","previous_headings":"Downstream analysis","what":"Markers","title":"Getting Started with RightOmicsTools","text":"growing number methods exist label single-cell clusters, using reference datasets SingleR package Azimuth, querying ChatGPT GPTCelltype package, via using canonical markers scientific literature. vast majority methods need set genes input, determining differentially expressed genes (DEG) cluster common first step. purpose, going use function RightOmicsTools, Find_Annotation_Markers, wrapper function around FindMarkers. designed default conveniently output character vector top 5 markers, chosen based highest average log fold change genes expressed least 25% cells cluster, mitochondrial, ribosomal non-coding genes excluded, order maximize chances finding canonical markers unsupervised manner. also provides many parameters can used tailor function specific needs: markers may directly used plotting. Since Seurat package tutorial uses DoHeatmap, compare equivalent RightOmicsTools, Cell_Heatmap, reworked using ComplexHeatmap package instead ggplot2 package:  Let’s compare Seurat package’s default heatmap function:  heatmaps look similar aside colors, purpose default parameters, Cell_Heatmap truly shines complexity offering customization options, possibility cluster features, apply k-means, split identities another metadata…","code":"# Top 5 markers for each cluster, we will name each marker with cluster identity annotation.markers <- Find_Annotation_Markers(pbmc3k,                                               name.features = TRUE)  # Display markers for each cluster annotation.markers #> Finding markers for cluster 0 against all other clusters #> Finding markers for cluster 1 against all other clusters #> Finding markers for cluster 2 against all other clusters #> Finding markers for cluster 3 against all other clusters #> Finding markers for cluster 4 against all other clusters #> Finding markers for cluster 5 against all other clusters #> Finding markers for cluster 6 against all other clusters #> Finding markers for cluster 7 against all other clusters #>  [1] \"CCR7\"     \"LEF1\"     \"MAL\"      \"PIK3IP1\"  \"TCF7\"     \"FOLR3\"    #>  [7] \"S100A12\"  \"S100A8\"   \"S100A9\"   \"CD14\"     \"AQP3\"     \"CD40LG\"   #> [13] \"CORO1B\"   \"CD2\"      \"TRAT1\"    \"VPREB3\"   \"CD79A\"    \"TCL1A\"    #> [19] \"FCRLA\"    \"FCER2\"    \"GZMK\"     \"GZMH\"     \"CCL5\"     \"CD8A\"     #> [25] \"KLRG1\"    \"CKB\"      \"CDKN1C\"   \"MS4A4A\"   \"HES4\"     \"BATF3\"    #> [31] \"AKR1C3\"   \"GNLY\"     \"GZMB\"     \"SH2D1B\"   \"SPON2\"    \"SERPINF1\" #> [37] \"FCER1A\"   \"CLIC2\"    \"ENHO\"     \"CLEC10A\" Cell_Heatmap(pbmc3k,              features = annotation.markers,              cluster.features = FALSE,              show.idents.legend = FALSE) DoHeatmap(pbmc3k,           features = annotation.markers) +    NoLegend()"},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"cell-annotation","dir":"Articles","previous_headings":"Downstream analysis","what":"Cell annotation","title":"Getting Started with RightOmicsTools","text":"now annotate cluster corresponding cell type display UMAP:","code":"# Annotate clusters new.cluster.ids <- c(\"Naive CD4 T\", \"CD14+ Mono\", \"Memory CD4 T\",                      \"B\", \"CD8 T\", \"FCGR3A+ Mono\", \"NK\", \"DC\")  names(new.cluster.ids) <- levels(pbmc3k) pbmc3k <- RenameIdents(pbmc3k, new.cluster.ids)  # Add metadata to Seurat object pbmc3k@meta.data$named_clusters <- pbmc3k@active.ident  # Plot UMAP with cell types DimPlot(pbmc3k, label = TRUE) +   NoLegend()"},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"cell-proportion","dir":"Articles","previous_headings":"Downstream analysis","what":"Cell proportion","title":"Getting Started with RightOmicsTools","text":"Following cell annotation, one often want visualize proportion cell type. using table identities gives information, often tedious organize data plotting; RightOmicsTools introduces Barplot_Cell_Proportion, automates cell proportion conveniently displays bar plot, possibility group /split based metadata, many parameters:","code":"Barplot_Cell_Proportion(pbmc3k)"},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"other-visualizations","dir":"Articles","previous_headings":"Downstream analysis","what":"Other visualizations","title":"Getting Started with RightOmicsTools","text":"conclude showing last two visualization functions; DotPlot_Heatmap, reworked version DotPlot, also built ComplexHeatmap package instead ggplot2 package, Grid_VlnPlot, stacked version VlnPlot square grid, also offering many options Seurat package’s counterparts:  Comparing Seurat package’s default dotplot function:  finally, grid violin plot:","code":"# We will disable some parameters to be as close as possible from Seurat's DotPlot # Due to the number of features, we will also lower dots size and flip the axis DotPlot_Heatmap(pbmc3k,                 features = annotation.markers,                 dots.size = 2,                 cluster.features = FALSE,                 cluster.idents = FALSE,                 rotate.axis = TRUE) # Seurat's DotPlot function doesn't work well with named features, we will remove names DotPlot(pbmc3k,         features = unname(annotation.markers)) +    RotatedAxis() +    coord_flip() Grid_VlnPlot(pbmc3k,              features = annotation.markers)"},{"path":[]},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"advanced-data-visualization","dir":"Articles","previous_headings":"Going further","what":"Advanced data visualization","title":"Getting Started with RightOmicsTools","text":"shown default parameters functions RightOmicsTools, many options available function; explore use cases , see far can customized, check advanced data visualization vignette.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"gene-signatures-from-gsea","dir":"Articles","previous_headings":"Going further","what":"Gene signatures from GSEA","title":"Getting Started with RightOmicsTools","text":"Another interesting feature RightOmicsTools possibility extract genes pathways Gene Set Enrichment Analysis (GSEA) database create visualize signatures. Check gene signatures GSEA vignette learn various usages function.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/articles/RightOmicsTools.html","id":"differentially-expressed-genes-in-pseudotime-analysis","dir":"Articles","previous_headings":"Going further","what":"Differentially expressed genes in pseudotime analysis","title":"Getting Started with RightOmicsTools","text":"Finally, RightOmicsTools provides helper visualization functions greatly speed facilitate differential gene expression pseudotime analysis tradeSeq package, focus highly customizable heatmap visualization function. Head DEG along pseudotime analysis vignette -depth look functions.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexis Varin. Author, maintainer.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Varin, Alexis. (2024). “RightOmicsTools: R Package Providing Complementary Tools Manipulation Visualization Single Cell RNA-Seq Data.” Zenodo. doi:10.5281/zenodo.12518909.","code":"@Article{,   title = {RightOmicsTools: An R Package Providing Complementary Tools for the Manipulation and Visualization of Single Cell RNA-Seq Data.},   author = {{Varin} and {Alexis.}},   journal = {Zenodo},   year = {2024},   doi = {10.5281/zenodo.12518909}, }"},{"path":"https://alexis-varin.github.io/RightOmicsTools/index.html","id":"rightomicstools","dir":"","previous_headings":"","what":"Complementary tools to manipulate and visualize single-cell RNA-seq data","title":"Complementary tools to manipulate and visualize single-cell RNA-seq data","text":"package set tools facilitate analysis single-cell RNA-seq data R. currently development updated regularly new functions improvements.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Complementary tools to manipulate and visualize single-cell RNA-seq data","text":"can get started RightOmicsTools following tutorial vignette guide package installation well showing examples functions available.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Complementary tools to manipulate and visualize single-cell RNA-seq data","text":"package also contains three vignettes, currently construction, one deep diving advanced customization visualization functions, another one demonstrating create visualize gene signatures GSEA pathways, finally last one showing helper functions designed facilitate differential gene expression pseudotime analysis tradeSeq package, focus heatmap visualization function gene expression along pseudotime, often requested feature.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/index.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"Complementary tools to manipulate and visualize single-cell RNA-seq data","text":"functions documented GitHub help may also accessed using ? R.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Complementary tools to manipulate and visualize single-cell RNA-seq data","text":"Finally, like cite package, find information .","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Barplot_Cell_Proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar plot of the cell proportions in each identity — Barplot_Cell_Proportion","title":"Bar plot of the cell proportions in each identity — Barplot_Cell_Proportion","text":"function generates bar plot cell proportions Seurat object.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Barplot_Cell_Proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar plot of the cell proportions in each identity — Barplot_Cell_Proportion","text":"","code":"Barplot_Cell_Proportion(   seurat_object,   group.by = NULL,   split.by = NULL,   idents = NULL,   group.idents = NULL,   split.idents = NULL,   colors = NULL,   order.prop = NULL,   order.group = NULL,   order.split = NULL,   order.colors = TRUE,   alpha = 1,   show.cellsum.label = TRUE,   cellsum.label.size = 3,   axis.text.size = 9,   x.axis.angle = 60,   x.axis.hjust = 1,   y.axis.title.size = 11,   legend.text.size = 9,   legend.side = \"bottom\",   show.legend = TRUE,   split.plot.title.size = 24,   prop.percent = TRUE,   nrow = 1,   unique.group.plot = TRUE,   unique.split.plot = FALSE,   output.data = FALSE )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Barplot_Cell_Proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar plot of the cell proportions in each identity — Barplot_Cell_Proportion","text":"seurat_object Seurat object. group.Character. name metadata (example, 'orig.ident', 'seurat_clusters', etc) group identities active.ident metadata . Returns stacked bar plot. split.Character. name metadata split identities active.ident metadata . Returns separate ggplot2 objects. idents Character. names one several identities active.ident metadata select. NULL, identities used. group.idents Character. names one several group.identities select. NULL, identities used. Ignored group.= NULL. split.idents Character. names one several split.identities select. NULL, identities used. Ignored split.= NULL. colors Character. color names identity active.ident metadata idents. NULL, uses Seurat's default colors. order.prop Character Numeric. Either 'reverse', identities (names numeric values corresponding indices) active.ident metadata idents order cells. order.group Character. Either 'reverse', names group.identities group.idents order cells. Ignored group.= NULL. order.split Character. Either 'reverse', names split.identities split.idents order cells. Ignored split.= NULL. order.colors Logical. TRUE, colors automatically ordered according order.prop. Ignored order.prop = NULL. alpha Numeric. transparency bar colors. value 0 1. show.cellsum.label Logical. TRUE, cell sum shown top bar. cellsum.label.size Numeric. font size cell sum label. Ignored show.cellsum.label = FALSE. axis.text.size Numeric. font size identity names cell percent count. x.axis.angle Numeric. rotation angle identity names. x.axis.hjust Numeric. horizontal justification identity names. y.axis.title.size Numeric. font size y axis title. legend.text.size Numeric. font size legend text. Ignored show.legend = FALSE. legend.side Character. side legend displayed, either 'left', 'right', 'top' 'bottom'. Ignored show.legend = FALSE. show.legend Logical. TRUE, shows legend. split.plot.title.size Numeric. font size split plot titles. Ignored split.= NULL. prop.percent Logical. TRUE, cell proportions shown percentage total cells identity. Ignored group.= NULL. nrow Numeric. number rows patchwork object. Ignored group.= NULL split.= NULL. unique.group.plot Logical. TRUE, stacked bar plots gathered single ggplot object. Ignored group.= NULL. unique.split.plot Logical. TRUE, ggplot objects gathered single patchwork. Ignored split.= NULL. output.data Logical. TRUE, function return data.frame object list data.frame objects cell proportions, instead displaying anything.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Barplot_Cell_Proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bar plot of the cell proportions in each identity — Barplot_Cell_Proportion","text":"ggplot object, list ggplot objects, patchwork object containing ggplot objects list patchwork objects containing ggplot objects.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Barplot_Cell_Proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bar plot of the cell proportions in each identity — Barplot_Cell_Proportion","text":"","code":"# Prepare data pbmc3k <- Right_Data(\"pbmc3k\")  # Example 1: default parameters Barplot_Cell_Proportion(pbmc3k)"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Cell_Heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of gene expression in each cell — Cell_Heatmap","title":"Heatmap of gene expression in each cell — Cell_Heatmap","text":"function generates heatmap visualize expression features cell Seurat object. Credits Ming Tang initial idea replicate DoHeatmap using ComplexHeatmap. Various new parameters added offer flexibility customization.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Cell_Heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of gene expression in each cell — Cell_Heatmap","text":"","code":"Cell_Heatmap(   seurat_object,   assay = \"RNA\",   layer = \"data\",   features,   split.by = NULL,   idents = NULL,   split.idents = NULL,   scale = TRUE,   rescale = FALSE,   rescale.range = c(0, 3),   rotate.axis = FALSE,   col.min = ifelse(isTRUE(scale), -2, 0),   col.max = ifelse(isTRUE(scale), 2, \"q100\"),   data.colors = if (isTRUE(scale)) c(\"#35A5FF\", \"white\", \"red\") else \"Viridis\",   palette.reverse = FALSE,   na.color = \"grey40\",   idents.colors = NULL,   show.idents.names.colors = TRUE,   show.idents.oppo.colors = FALSE,   split.colors = NULL,   show.split.names.colors = TRUE,   show.split.oppo.colors = FALSE,   order.idents = NULL,   order.split = NULL,   order.colors = TRUE,   kmeans.repeats = 100,   shuffle.cells = TRUE,   cluster.cells = FALSE,   cluster.features = TRUE,   features.kmeans = 1,   features.kmeans.numbers.size = 11,   idents.gap = 1,   features.gap = 1,   idents.names.size = 9,   features.names.size = 9,   features.names.style = \"italic\",   row.names.side = \"left\",   row.names.width = 15,   column.names.angle = 45,   column.names.side = \"top\",   column.names.height = 15,   outer.border = TRUE,   data.legend.name = ifelse(isTRUE(scale), \"Z-Score\", \"Expression\"),   data.legend.side = \"bottom\",   data.legend.direction = \"horizontal\",   data.legend.position = \"topcenter\",   data.legend.width = 5,   idents.legend.name = \"Clusters\",   show.idents.legend = TRUE,   split.legend.name = split.by,   show.split.legend = TRUE,   legend.title.size = 10,   legend.text.size = 10,   legend.gap = 10,   raster = ifelse(ncol(seurat_object) > 3000, TRUE, FALSE),   raster.quality = 10,   output.data = FALSE,   ... )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Cell_Heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of gene expression in each cell — Cell_Heatmap","text":"seurat_object Seurat object. assay Character. name assay containing layer expression matrix. seurat_object contains multiple 'RNA' assays, may specify one use (example, 'RNA2' created second 'RNA' assay named 'RNA2'. See Seurat v5 vignettes information). may also use another assay, 'SCT', pull feature expression . layer Character. name layer (formerly known slot) stores expression matrix. recommended use 'data'. features Character. names one several features plot cell expression . split.Character. name metadata (example, 'orig.ident', 'seurat_clusters', etc) split identities active.ident metadata . idents Character. names one several identities active.ident metadata select. NULL, identities used. split.idents Character. names one several split.identities select. NULL, identities used. Ignored split.= NULL. scale Logical. TRUE, cell expression values scaled using scale default parameters. resulting values Z-scores (mean subtracted values divided standard deviation) positive cell expression values anymore, positive negative values displayed, depending expression particular cell mean expression cells (calculated independently feature). rescale Logical. TRUE, cell expression values adjusted using rescale first numerical value rescale.range (lowest expression) second numerical value (highest expression). different scale compare values mean standard deviation therefore Z-score, refits cell expression value (independently feature) order visualize features dimension regardless differences levels expression. Ignored scale = TRUE. rescale.range Numeric. minimum maximum values resize cell expression values internally passed rescale. values arbitrary change visualization, values legend, need adjust col.min col.max influence color scale. Ignored rescale = FALSE scale = TRUE. rotate.axis Logical. TRUE, flips axis, features displayed columns identities rows. col.min Character Numeric. minimum value breaks internally passed colorRamp2. character, must quantile form 'qX' X number 0 100. value 'q5' 'q10' useful reduce effect outlier values (.e. low value significantly alters color scale range values). col.max Character Numeric. maximum value breaks internally passed colorRamp2. character, must quantile form 'qX' X number 0 100. value 'q95' 'q90' useful reduce effect outlier values (.e. high value significantly alters color scale range values). data.colors Character Function. Either three color names, corresponding lowest, zero (middle scale = FALSE), highest values expression matrix internally passed colorRamp2, two color names, corresponding lowest highest values, name palette internally passed hcl_palette colorRamp2 ('Inferno', 'Berlin', 'Viridis' etc, check hcl.pals palettes available), custom colorRamp2 function. palette.reverse Logical. TRUE data.colors palette ('Viridis'), function reverse colors. na.color Character. color name missing values (NA). idents.colors Character. color names identity active.ident metadata idents. NULL, uses Seurat's default colors. show.idents.names.colors Logical. TRUE, function display colors specified idents.colors next identity names. show.idents.oppo.colors Logical. TRUE, function display colors specified idents.colors opposite side identity names. split.colors Character. color names split.identity split.idents. NULL, uses custom set colors colors. Ignored split.= NULL. show.split.names.colors Logical. TRUE, function display colors specified split.colors next identity names. Ignored split.= NULL. show.split.oppo.colors Logical. TRUE, function display colors specified split.colors opposite side identity names. Ignored split.= NULL. order.idents Character Numeric. Either 'reverse', identities (names numerical values corresponding indices) active.ident metadata idents order cells. order.split Character Numeric. Either 'reverse', split.identities (names numerical values corresponding indices) split.idents order cells. Ignored split.= NULL. order.colors Logical. TRUE, data.colors split.colors automatically ordered according order.idents order.split. Ignored order.idents order.split NULL. kmeans.repeats Numeric. number runs get consensus K-means clustering. Ignored features.kmeans = 1. shuffle.cells Logical. TRUE, function randomize distribution cells identity. Useful smooth expression, limits visible batch effect (cells merged Seurat object typically ordered based levels 'orig.ident' metadata, might lead unwanted patterns expression another metadata). Note values modified, changes order cells identity. Ignored cluster.cells = TRUE. cluster.cells Logical. TRUE, function cluster cells within identity. opposite effect shuffle.cells, order cells based expression similarity therefore increase batch effect. Useful visualize , within identity, subset cells high expression rest cells low expression, vice versa. Just like shuffle.cells, values modified, changes order cells identity. cluster.features Logical Function. TRUE, function cluster features. may also pass hclust dendrogram object contains clustering. features.kmeans Numeric. number slices use feature K-means clustering. features.kmeans.numbers.size Numeric. font size feature K-means slice numbers. Set 0 remove . idents.gap Numeric. gap identity slices. features.gap Numeric. gap feature slices. Ignored features.kmeans = 1. idents.names.size Numeric. font size identity names. Set 0 remove . features.names.size Numeric. font size feature names. Set 0 remove . features.names.style Character. font face feature names. Gene nomenclature used almost scientific journals require feature names italicized, therefore parameter default set 'italic'. Use 'plain' revert back regular font face. row.names.side Character. side row names displayed, either 'left' 'right'. dendrogram displayed opposite side. row.names.width Numeric. width row names. Increase parameter row names truncated. column.names.angle Numeric. angle rotation column names. column.names.side Character. side column names displayed, either 'top' 'bottom'. dendrogram displayed opposite side. column.names.height Numeric. height column names. Increase parameter column names truncated. outer.border Logical. TRUE, function display outer border around heatmap around slice features.kmeans > 1. data.legend.name Character. name data legend. data.legend.side Character. side data legend displayed, either 'left', 'right', 'top' 'bottom'. data.legend.direction Character. direction data legend, either 'horizontal' 'vertical'. data.legend.position Character. centering data legend name, many options, default option Heatmap 'topleft'. data.legend.width Numeric. long data legend , affects data legend data.legend.direction = 'horizontal'. idents.legend.name Character. name active.ident metadata legend. Ignored show.idents.names.colors show.idents.oppo.colors FALSE. show.idents.legend Logical. TRUE, function display legend active.ident metadata identities idents. Ignored show.idents.names.colors show.idents.oppo.colors FALSE. split.legend.name Character. name split.legend. Ignored split.= NULL. Ignored show.split.names.colors show.split.oppo.colors FALSE. show.split.legend Logical. TRUE, function display legend split.identities split.idents. Ignored show.split.names.colors show.split.oppo.colors FALSE. legend.title.size Numeric. font size legend titles. legend.text.size Numeric. font size legend texts. legend.gap Numeric. gap legends heatmap. parameter sets value global options ht_opt, affect Heatmap objects R session. Use ComplexHeatmap::ht_opt(RESET = TRUE) restore default parameters. raster Logical. (Heatmap documentation) TRUE, function render heatmap body raster image. helps reduce file size matrix huge. raster.quality Numeric. quality raster image. higher value slow rendering lower expression smoothing. Ignored raster = FALSE. output.data Logical. TRUE, function return matrix object cell expression data, scaled , instead displaying anything. ... Additional arguments passed Heatmap, show_parent_dend_line, clustering_method_rows, etc, accepts parameter already internally passed Heatmap (example, outer.border sets border parameter Heatmap, get error try pass border parameter Cell_Heatmap).","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Cell_Heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of gene expression in each cell — Cell_Heatmap","text":"Heatmap object, matrix object cell expression data, scaled .","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Cell_Heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of gene expression in each cell — Cell_Heatmap","text":"","code":"# Prepare data pbmc3k <- Right_Data(\"pbmc3k\") pbmc3k.markers = c(\"CCR7\", \"TCF7\", \"S100A9\", \"CD14\",                  \"CD40LG\", \"CD2\", \"CD79A\", \"TCL1A\",                  \"CCL5\", \"CD8A\", \"CDKN1C\", \"MS4A4A\",                  \"GNLY\", \"GZMB\")  # Example 1: default parameters Cell_Heatmap(pbmc3k,              features = pbmc3k.markers)"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/DotPlot_Heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot plot or heatmap of average gene expression in each identity — DotPlot_Heatmap","title":"Dot plot or heatmap of average gene expression in each identity — DotPlot_Heatmap","text":"function generates dot plot heatmap visualize average expression features identity active.ident metadata Seurat object. Credits Seurat's dev team original DotPlot data processing function derived Ming Tang initial idea use ComplexHeatmap draw dot plot layer_fun function draws dots. Various new parameters added offer flexibility customization.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/DotPlot_Heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot plot or heatmap of average gene expression in each identity — DotPlot_Heatmap","text":"","code":"DotPlot_Heatmap(   seurat_object,   assay = \"RNA\",   layer = \"data\",   data.are.log = TRUE,   features,   split.by = NULL,   idents = NULL,   split.idents = NULL,   scale = TRUE,   rescale = FALSE,   rescale.range = c(0, 3),   rotate.axis = FALSE,   dotplot = TRUE,   dots.type = \"square root\",   dots.size = 4,   show.noexpr.dots = FALSE,   col.min = ifelse(isTRUE(scale), -2, 0),   col.max = ifelse(isTRUE(scale), 2, \"q100\"),   data.colors = if (isTRUE(scale)) c(\"#35A5FF\", \"white\", \"red\") else \"Viridis\",   palette.reverse = FALSE,   na.color = \"grey40\",   background.color = \"white\",   idents.colors = NULL,   show.idents.names.colors = FALSE,   show.idents.oppo.colors = TRUE,   split.colors = NULL,   show.split.names.colors = FALSE,   show.split.oppo.colors = TRUE,   order.idents = NULL,   order.split = NULL,   order.colors = TRUE,   kmeans.repeats = 100,   cluster.idents = TRUE,   idents.kmeans = 1,   idents.kmeans.numbers.size = 11,   cluster.features = TRUE,   features.kmeans = 1,   features.kmeans.numbers.size = 11,   idents.gap = 1,   features.gap = 1,   idents.names.size = 9,   features.names.size = 9,   features.names.style = \"italic\",   row.names.side = \"left\",   row.names.width = 15,   column.names.angle = 45,   column.names.side = \"bottom\",   column.names.height = 15,   inner.border = TRUE,   outer.border = TRUE,   data.legend.name = ifelse(isTRUE(scale), \"Z-Score\", \"Average Expression\"),   data.legend.side = \"bottom\",   data.legend.direction = \"horizontal\",   data.legend.position = \"topcenter\",   data.legend.width = 5,   show.data.legend = TRUE,   idents.legend.name = \"Clusters\",   show.idents.legend = TRUE,   split.legend.name = split.by,   show.split.legend = TRUE,   legend.title.size = 10,   legend.text.size = 10,   legend.gap = 10,   output.data = FALSE,   ... )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/DotPlot_Heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot plot or heatmap of average gene expression in each identity — DotPlot_Heatmap","text":"seurat_object Seurat object. assay Character. name assay containing layer expression matrix. seurat_object contains multiple 'RNA' assays, may specify one use (example, 'RNA2' created second 'RNA' assay named 'RNA2'. See Seurat v5 vignettes information). may also use another assay, 'SCT', pull feature expression . layer Character. name layer (formerly known slot) stores expression matrix. recommended use 'data'. data..log Logical. TRUE, layer = 'data', function assumes data log-transformed cell expression values exponentiated (using expm1) averaging done non-log space (per DotPlot AverageExpression's default behavior), average expression values log-transformed back (using log1p). layer = 'scale.data' 'counts', cell expression values exponentiated prior averaging. features Character. names one several features plot average expression . split.Character. name metadata (example, 'orig.ident', 'seurat_clusters', etc) split identities active.ident metadata . idents Character. names one several identities active.ident metadata select. NULL, identities used. split.idents Character. names one several split.identities select. NULL, identities used. Ignored split.= NULL. scale Logical. TRUE, average expression values scaled using scale default parameters. resulting values Z-scores (mean subtracted values divided standard deviation) positive average expression values anymore, positive negative values displayed, depending average expression particular identity mean average expression identities (calculated independently feature). Caution exercised interpreting results low number identities (typically five), small differences average expression might lead exacerbated differences scaled. rescale Logical. TRUE, average expression values adjusted using rescale first numerical value rescale.range (lowest expression) second numerical value (highest expression). different scale compare values mean standard deviation therefore Z-score, refits average expression value (independently feature) order visualize features dimension regardless differences levels expression. Caution exercised interpreting results low number identities (typically five), small differences average expression might lead exacerbated differences rescaled. Ignored scale = TRUE. rescale.range Numeric. minimum maximum values resize average expression values internally passed rescale. values arbitrary change visualization, values legend, need adjust col.min col.max influence color scale. Ignored rescale = FALSE scale = TRUE. rotate.axis Logical. TRUE, flips axis, features displayed rows identities columns. dotplot Logical. TRUE, function display dot plot, dots size proportional percentage cells identity expressing feature. FALSE, function instead display heatmap. dots.type Character. Determines dot size differences 0 100% expression. Either 'square root' (lower difference) 'radius' (higher difference). Ignored dotplot = FALSE. dots.size Numeric. size dots. Decreasing parameter helps displaying large number features. Ignored dotplot = FALSE. show.noexpr.dots Logical. TRUE, function display small dot features 0% expression, instead nothing. Ignored dotplot = FALSE. col.min Character Numeric. minimum value breaks internally passed colorRamp2. character, must quantile form 'qX' X number 0 100. value 'q5' 'q10' useful reduce effect outlier values (.e. low value significantly alters color scale range values). col.max Character Numeric. maximum value breaks internally passed colorRamp2. character, must quantile form 'qX' X number 0 100. value 'q95' 'q90' useful reduce effect outlier values (.e. high value significantly alters color scale range values). data.colors Character Function. Either three color names, corresponding lowest, zero (middle scale = FALSE), highest values expression matrix internally passed colorRamp2, two color names, corresponding lowest highest values, name palette internally passed hcl_palette colorRamp2 ('Inferno', 'Berlin', 'Viridis' etc, check hcl.pals palettes available), custom colorRamp2 function. palette.reverse Logical. TRUE data.colors palette ('Viridis'), function reverse colors. na.color Character. color name missing values (NA). background.color Character. color name background behind dots. Ignored dotplot = FALSE. idents.colors Character. color names identity active.ident metadata idents. NULL, uses Seurat's default colors. show.idents.names.colors Logical. TRUE, function display colors specified idents.colors next identity names. show.idents.oppo.colors Logical. TRUE, function display colors specified idents.colors opposite side identity names. split.colors Character. color names split.identity split.idents. NULL, uses custom set colors colors. Ignored split.= NULL. show.split.names.colors Logical. TRUE, function display colors specified split.colors next identity names. Ignored split.= NULL. show.split.oppo.colors Logical. TRUE, function display colors specified split.colors opposite side identity names. Ignored split.= NULL. order.idents Character Numeric. Either 'reverse', identities (names numerical values corresponding indices) active.ident metadata idents order cells. cluster.idents = TRUE Function, legend names ordered. order.split Character Numeric. Either 'reverse', split.identities (names numerical values corresponding indices) split.idents order cells. cluster.idents = TRUE Function, legend names ordered. Ignored split.= NULL. order.colors Logical. TRUE, data.colors split.colors automatically ordered according order.idents order.split. Ignored order.idents order.split NULL. kmeans.repeats Numeric. number runs get consensus K-means clustering. Ignored idents.kmeans features.kmeans equal 1. cluster.idents Logical Function. TRUE, function cluster identities. may also pass hclust dendrogram object contains clustering. idents.kmeans Numeric. number slices use identity K-means clustering. idents.kmeans.numbers.size Numeric. font size identity K-means slice numbers. Set 0 remove . cluster.features Logical Function. TRUE, function cluster features. may also pass hclust dendrogram object contains clustering. features.kmeans Numeric. number slices use feature K-means clustering. features.kmeans.numbers.size Numeric. font size feature K-means slice numbers. Set 0 remove . idents.gap Numeric. gap identity slices. Ignored idents.kmeans = 1. features.gap Numeric. gap feature slices. Ignored features.kmeans = 1. idents.names.size Numeric. font size identity names. Set 0 remove . features.names.size Numeric. font size feature names. Set 0 remove . features.names.style Character. font face feature names. Gene nomenclature used almost scientific journals require feature names italicized, therefore parameter default set 'italic'. Use 'plain' revert back regular font face. row.names.side Character. side row names displayed, either 'left' 'right'. dendrogram displayed opposite side. row.names.width Numeric. width row names. Increase parameter row names truncated. column.names.angle Numeric. angle rotation column names. column.names.side Character. side column names displayed, either 'top' 'bottom'. dendrogram displayed opposite side. column.names.height Numeric. height column names. Increase parameter column names truncated. inner.border Logical. TRUE, function display black outline around dot dotplot = TRUE, black border around cell heatmap dotplot = FALSE. outer.border Logical. TRUE, function display outer border around plot around slice idents.kmeans /features.kmeans higher 1. data.legend.name Character. name data legend. data.legend.side Character. side data legend displayed, either 'left', 'right', 'top' 'bottom'. data.legend.direction Character. direction data legend, either 'horizontal' 'vertical'. data.legend.position Character. centering data legend name, many options, default option Heatmap 'topleft'. data.legend.width Numeric. long data legend , affects data legend data.legend.direction = 'horizontal'. show.data.legend Logical. TRUE, function display legend average expression data. idents.legend.name Character. name active.ident metadata legend. Ignored show.idents.names.colors show.idents.oppo.colors FALSE. show.idents.legend Logical. TRUE, function display legend active.ident metadata identities idents. Ignored show.idents.names.colors show.idents.oppo.colors FALSE. split.legend.name Character. name split.legend. Ignored split.= NULL. Ignored show.split.names.colors show.split.oppo.colors FALSE. show.split.legend Logical. TRUE, function display legend split.identities split.idents. Ignored show.split.names.colors show.split.oppo.colors FALSE. legend.title.size Numeric. font size legend titles. legend.text.size Numeric. font size legend texts. legend.gap Numeric. gap legends dot plot heatmap. parameter sets value global options ht_opt, affect Heatmap objects R session. Use ComplexHeatmap::ht_opt(RESET = TRUE) restore default parameters. output.data Logical. TRUE, function return list containing matrix object average expression data, scaled , another matrix object containing percentage cells expressing feature, instead displaying anything. ... Additional arguments passed Heatmap, show_parent_dend_line, clustering_method_rows, etc, accepts parameter already internally passed Heatmap (example, outer.border sets border parameter Heatmap, get error try pass border parameter DotPlot_Heatmap).","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/DotPlot_Heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dot plot or heatmap of average gene expression in each identity — DotPlot_Heatmap","text":"Heatmap object, either dot plot, heatmap, list containing matrix object average expression data, scaled , another matrix object containing percentage cells expressing feature.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/DotPlot_Heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dot plot or heatmap of average gene expression in each identity — DotPlot_Heatmap","text":"","code":"# Prepare data pbmc3k <- Right_Data(\"pbmc3k\") pbmc3k.markers <- c(\"CCR7\", \"CD14\", \"CD40LG\",                     \"CD79A\", \"CD8A\", \"CDKN1C\",                     \"GNLY\", \"CLEC10A\", \"PPBP\")  # Example 1: default parameters DotPlot_Heatmap(pbmc3k,                 features = pbmc3k.markers)"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Find_Annotation_Markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the top markers for fast annotation — Find_Annotation_Markers","title":"Get the top markers for fast annotation — Find_Annotation_Markers","text":"function wrapper around FindMarkers allows parallelization filtering mitochondrial, ribosomal non-coding RNA features human, well filtering pseudogenes mouse. may also directly return top X markers identity.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Find_Annotation_Markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the top markers for fast annotation — Find_Annotation_Markers","text":"","code":"Find_Annotation_Markers(   seurat_object,   ident.1 = NULL,   ident.2 = NULL,   min.pct = 0.25,   top.markers = 5,   unique.markers = TRUE,   filter.mito = TRUE,   filter.ribo = TRUE,   filter.ncRNA = TRUE,   species = \"human\",   parallelized = FALSE,   BPPARAM = NULL,   name.markers = FALSE,   output.df = FALSE,   output.list = FALSE,   verbose = TRUE,   ... )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Find_Annotation_Markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the top markers for fast annotation — Find_Annotation_Markers","text":"seurat_object Seurat object. ident.1 Character. (FindMarkers documentation) Identity class define markers ; pass object class phylo 'clustertree' find markers node cluster tree; passing 'clustertree' requires BuildClusterTree run. Leave NULL find markers clusters. ident.2 Character. (FindMarkers documentation) second identity class comparison; NULL, use cells comparison; object class phylo 'clustertree' passed ident.1, must pass node find markers . min.pct Numeric. (FindMarkers documentation) test features detected minimum fraction min.pct cells either two populations. Meant speed function testing features infrequently expressed. top.markers Numeric. number top markers return. Inf, markers returned. unique.markers Logical. TRUE, unique markers returned identity order prevent features repeated multiple times. filter.mito Logical. TRUE, mitochondrial features filtered . filter.ribo Logical. TRUE, ribosomal features filtered . filter.ncRNA Logical. TRUE, non-coding RNA features filtered . species Character. species name filter non-coding RNA features. 'human', dataset named ncRNA_human built genenames database used reference. 'mouse', pseudogenes filtered based dataset named pseudogenes_mouse built dreamBase2 database. datasets loaded RightOmicsTools may checked information. parallelized Logical. TRUE, FindMarkers parallelized using BiocParallel. Please note parallelization complex depends operating system (Windows users might see gain might even experience slowdown). BPPARAM BiocParallelParam object used parallelization. NULL parallelized = TRUE, function use SerialParam object configured use single worker (core) therefore parallelized, order prevent accidental use large computation resources. Ignored parallelized = FALSE. name.markers Logical. TRUE, marker named associated identity. Ignored output.df = TRUE. output.df Logical. TRUE, data.frame object containing FindMarkers results, ordered decreasing log fold change returned. FALSE, feature names returned. output.list Logical. TRUE, output.df = TRUE, returns list data.frame objects containing FindMarkers results identity, output.df = FALSE, returns list feature names identity. verbose Logical. FALSE, print progress messages output, warnings errors still printed. ... Additional arguments passed FindMarkers, test.use, passed methods specific DE methods.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Find_Annotation_Markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the top markers for fast annotation — Find_Annotation_Markers","text":"data.frame object list data.frame objects containing FindMarkers results, list features names, feature names.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Find_Annotation_Markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the top markers for fast annotation — Find_Annotation_Markers","text":"","code":"# Prepare data pbmc3k <- Right_Data(\"pbmc3k\")  # Example 1: default parameters and origin of markers pbmc3k.markers <- Find_Annotation_Markers(pbmc3k,                                           name.markers = TRUE) #> Finding markers for cluster Naive CD4 T against all other clusters #> Finding markers for cluster CD14+ Mono against all other clusters #> Finding markers for cluster Memory CD4 T against all other clusters #> Finding markers for cluster B against all other clusters #> Finding markers for cluster CD8 T against all other clusters #> Finding markers for cluster FCGR3A+ Mono against all other clusters #> Finding markers for cluster NK against all other clusters #> Finding markers for cluster DC against all other clusters #> Finding markers for cluster Platelets against all other clusters pbmc3k.markers #>     Naive CD4 T     Naive CD4 T     Naive CD4 T     Naive CD4 T     Naive CD4 T  #>          \"CCR7\"          \"LEF1\"           \"MAL\"       \"PIK3IP1\"          \"TCF7\"  #>      CD14+ Mono      CD14+ Mono      CD14+ Mono      CD14+ Mono      CD14+ Mono  #>         \"FOLR3\"       \"S100A12\"        \"S100A8\"        \"S100A9\"          \"CD14\"  #>    Memory CD4 T    Memory CD4 T    Memory CD4 T    Memory CD4 T    Memory CD4 T  #>        \"CD40LG\"          \"AQP3\"         \"SUSD3\"           \"CD2\"         \"TRAT1\"  #>               B               B               B               B               B  #>        \"VPREB3\"         \"CD79A\"         \"FCRLA\"         \"TCL1A\"         \"FCER2\"  #>           CD8 T           CD8 T           CD8 T           CD8 T           CD8 T  #>          \"GZMK\"          \"GZMH\"          \"CD8A\"          \"CCL5\"         \"KLRG1\"  #>    FCGR3A+ Mono    FCGR3A+ Mono    FCGR3A+ Mono    FCGR3A+ Mono    FCGR3A+ Mono  #>           \"CKB\"        \"CDKN1C\"        \"MS4A4A\"          \"HES4\"         \"BATF3\"  #>              NK              NK              NK              NK              NK  #>        \"AKR1C3\"          \"GZMB\"        \"SH2D1B\"         \"SPON2\"        \"FGFBP2\"  #>              DC              DC              DC              DC              DC  #>      \"SERPINF1\"        \"FCER1A\"         \"CLIC2\"       \"CLEC10A\"          \"ENHO\"  #>       Platelets       Platelets       Platelets       Platelets       Platelets  #>        \"LY6G6F\" \"RP11-879F14.2\"         \"CLDN5\"           \"GP9\"        \"ITGA2B\"   # Example 2: parallelized FindAllMarkers BPPARAM <- BiocParallel::registered()[[1]] if (BPPARAM$workers > 4) BPPARAM$workers <- 4 pbmc3k.markers <- Find_Annotation_Markers(pbmc3k,                                           min.pct = 0.01,                                           top.markers = Inf,                                           unique.markers = FALSE,                                           filter.mito = FALSE,                                           filter.ribo = FALSE,                                           filter.ncRNA = FALSE,                                           parallelized = TRUE,                                           BPPARAM = BPPARAM,                                           output.df = TRUE) #> Finding markers for cluster FCGR3A+ Mono against all other clustersFinding markers for cluster NK against all other clustersFinding markers for cluster DC against all other clustersFinding markers for cluster Platelets against all other clusters #> Finding markers for cluster Naive CD4 T against all other clustersFinding markers for cluster CD14+ Mono against all other clustersFinding markers for cluster Memory CD4 T against all other clustersFinding markers for cluster B against all other clustersFinding markers for cluster CD8 T against all other clusters head(pbmc3k.markers) #>                p_val avg_log2FC pct.1 pct.2    p_val_adj     cluster feature #> GTSCR1  1.720280e-08   7.163733 0.016 0.000 2.359193e-04 Naive CD4 T  GTSCR1 #> REG4    4.484775e-10   5.902153 0.022 0.000 6.150421e-06 Naive CD4 T    REG4 #> C2orf40 1.024936e-10   5.644114 0.023 0.000 1.405597e-06 Naive CD4 T C2orf40 #> MMP28   1.729283e-07   4.380462 0.016 0.000 2.371539e-03 Naive CD4 T   MMP28 #> NOG     5.025979e-10   4.148065 0.032 0.003 6.892627e-06 Naive CD4 T     NOG #> FAM153A 8.848417e-08   3.880304 0.020 0.001 1.213472e-03 Naive CD4 T FAM153A"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/GSEA_Signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene signatures from GSEA-MSigDB pathways — GSEA_Signatures","title":"Gene signatures from GSEA-MSigDB pathways — GSEA_Signatures","text":"Following gene set enrichment analysis (GSEA), one often like explore expression genes comprised enriched pathways. purpose, function builds pathway database MSigDB creates signatures (module scores calculated UCell Seurat's respective functions) features found Seurat object extracted supplied pathways. also returns feature names can used visualize individual expression, using example DotPlot_Heatmap.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/GSEA_Signatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene signatures from GSEA-MSigDB pathways — GSEA_Signatures","text":"","code":"GSEA_Signatures(   seurat_object,   assay = \"RNA\",   layer = \"data\",   species = \"Homo sapiens\",   category = NULL,   subcategory = NULL,   pathways,   min.features = 2,   signatures.names = \"name\",   method = \"UCell\",   only.features = FALSE,   fail.safe = 10,   verbose = TRUE,   ... )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/GSEA_Signatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene signatures from GSEA-MSigDB pathways — GSEA_Signatures","text":"seurat_object Seurat object. assay Character. name assay containing layer expression matrix. seurat_object contains multiple 'RNA' assays, may specify one use (example, 'RNA2' created second 'RNA' assay named 'RNA2'. See Seurat v5 vignettes information). may also use another assay, 'SCT', pull feature expression . layer Character. name layer (formerly known slot) stores expression matrix. seurat_object contains split layers, function always join searching features adding signatures. species Character. species name internally passed msigdbr build pathway database. Use msigdbr::msigdbr_species names available species. category Character. names one several categories internally passed msigdbr build pathway database. Use msigdbr::msigdbr_collections names available categories (gs_cat column). NULL, categories used. subcategory Character. names one several subcategories internally passed msigdbr build pathway database. Use msigdbr::msigdbr_collections names available subcategories (gs_subcat column). NULL, subcategories used. pathways Character. names one several pathways searched pathway database added signatures. may provide either pathway id (example, 'GO:0006574') name matching pattern found gs_name column (uppercase letters underscores words). Please note may also provide partial match (example, 'TYPE_I_INTERFERON') function find pathways containing partial pattern. Beware may result large number pathways added signatures (using .features = TRUE highly recommended) handy explore pathways interest particular biological process. min.features Numeric. minimum number features present seurat_object pathway added signature. signatures.names Character. Either 'id', add ids pathways signature names (example, 'GO:0004657', 'hsa05200' etc), 'name', add names pathways signature names (example, 'GOBP_T_CELL_RECEPTOR_SIGNALING_PATHWAY'). may also provide custom names used signature names, whose length must match length pathways supplied. multiple results found pathway, function append number corresponding custom signature name result. method Character. method used calculate module scores, either 'UCell' 'Seurat'. .features Logical. TRUE, function add signature seurat_object return feature names pathways found seurat_object feature names present seurat_object. fail.safe Numeric. maximum number signatures function attempt add seurat_object. number signatures found higher number, function add signature, instead return seurat_object well feature names pathways found seurat_object feature names present seurat_object. prevents function adding large number signatures seurat_object mistake. verbose Logical. FALSE, print progress messages output, warnings errors still printed. ... Additional arguments passed AddModuleScore_UCell AddModuleScore, nbin maxRank.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/GSEA_Signatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene signatures from GSEA-MSigDB pathways — GSEA_Signatures","text":"list containing seurat_object added signatures, feature names pathways found seurat_object, feature names present seurat_object signature names. .features = TRUE, function instead return list containing feature names pathways found seurat_object feature names present seurat_object.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Grid_VlnPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Square stacked violin plot of gene expression in each identity — Grid_VlnPlot","title":"Square stacked violin plot of gene expression in each identity — Grid_VlnPlot","text":"function stacked violin plot optimized display average expression features Seurat object grid fashion (square) instead single column like stacked violin functions available packages.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Grid_VlnPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Square stacked violin plot of gene expression in each identity — Grid_VlnPlot","text":"","code":"Grid_VlnPlot(   seurat_object,   assay = \"RNA\",   layer = \"data\",   features,   idents = NULL,   scale = TRUE,   rotate.axis = FALSE,   colors = NULL,   order.idents = NULL,   order.colors = TRUE,   idents.text.size = 9,   show.idents = FALSE,   features.text.size = 9,   legend.text.size = 7,   legend.side = \"bottom\",   show.legend = TRUE,   ncol = \"square\" )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Grid_VlnPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Square stacked violin plot of gene expression in each identity — Grid_VlnPlot","text":"seurat_object Seurat object. assay Character. name assay containing layer expression matrix. seurat_object contains multiple 'RNA' assays, may specify one use (example, 'RNA2' created second 'RNA' assay named 'RNA2'. See Seurat v5 vignettes information). may also use another assay, 'SCT', pull feature expression . layer Character. name layer (formerly known slot) stores expression matrix. recommended use 'data'. features Character. names one several features plot cell expression . idents Character. names one several identities active.ident metadata select. NULL, identities used. scale Logical. TRUE, scales violins max height features. rotate.axis Logical. TRUE, flips axis, displaying violins vertically instead horizontally. colors Character. color names identity active.ident metadata idents. NULL, uses Seurat's default colors. order.idents Character Numeric. Either 'reverse', identities (names numeric values corresponding indices) active.ident metadata idents order cells. order.colors Logical. TRUE, colors automatically ordered according order.prop. Ignored order.prop = NULL. idents.text.size Numeric. font size identity names. Ignored show.idents = FALSE. show.idents Logical. TRUE, shows identity names plot. features.text.size Numeric. font size feature names. legend.text.size Numeric. font size legend text. Ignored show.legend = FALSE. legend.side Character. side legend displayed, either 'left', 'right', 'top' 'bottom'. Ignored show.legend = FALSE. show.legend Logical. TRUE, shows legend. ncol Numeric. number columns use. 'square', display features square grid close possible depending number features.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Grid_VlnPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Square stacked violin plot of gene expression in each identity — Grid_VlnPlot","text":"ggplot2 object.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Grid_VlnPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Square stacked violin plot of gene expression in each identity — Grid_VlnPlot","text":"","code":"# Prepare data pbmc3k <- Right_Data(\"pbmc3k\") pbmc3k.markers <- c(\"CCR7\", \"CD14\", \"CD40LG\",                     \"CD79A\", \"CD8A\", \"CDKN1C\",                     \"GNLY\", \"CLEC10A\", \"PPBP\")  # Example 1: default parameters Grid_VlnPlot(pbmc3k,              features = pbmc3k.markers)"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Mixture_File_Builder.html","id":null,"dir":"Reference","previous_headings":"","what":"Builder of CIBERSORTx Mixture File — Mixture_File_Builder","title":"Builder of CIBERSORTx Mixture File — Mixture_File_Builder","text":"function builds Mixture File CIBERSORTx bulk RNA-seq /microarray files /R objects.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Mixture_File_Builder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builder of CIBERSORTx Mixture File — Mixture_File_Builder","text":"","code":"Mixture_File_Builder(   objects = NULL,   files.path = NULL,   file.name = \"Mixture_File\",   file.format = \"txt\",   file.sep = \"\\t\",   write.path = NULL,   write = TRUE,   verbose = TRUE )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Mixture_File_Builder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builder of CIBERSORTx Mixture File — Mixture_File_Builder","text":"objects data.frame, data.table matrix object mixed list data.frame, data.table /matrix objects corresponding bulk RNA-seq /microarray experiments, genes rows gene names row names first column. single object may contain multiple samples /experiments columns long contains single gene names column row names first column (.e. | gene | sample1 | sample2 | sample3 | etc). may mix objects different gene names order number (example, object containing 13567 genes another 18458 genes). files.path Character. path read txt, csv /tsv files corresponding bulk RNA-seq microarray experiments, genes rows gene names first column. single file may contain multiple samples /experiments columns long contains single gene names column first column. may mix files different genes names order number (example, file containing 21848 genes another 19457 genes). file.name Character. name Mixture File written disk. Must contain space CIBERSORTx, function automatically replace space underscore. Ignored write = FALSE. file.format Character. format Mixture File written disk. Must 'txt' 'tsv' CIBERSORTx, may also specify 'csv' example, projects CIBERSORTx. Accepts format fwrite function accept. Ignored write = FALSE. file.sep Character. separator use Mixture File written disk. Must tabulation CIBERSORTx, may also specify comma example, projects CIBERSORTx. Accepts separator fwrite function accept. Ignored write = FALSE. write.path Character. path write Mixture File . NULL, uses current working directory. Ignored write = FALSE. write Logical. TRUE, writes disk Mixture File. verbose Logical. FALSE, print progress messages output, warnings errors still printed.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Mixture_File_Builder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builder of CIBERSORTx Mixture File — Mixture_File_Builder","text":"data.table object containing counts objects /files provided, column sample. write = TRUE, data.table object also written disk.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Reference_Matrix_Builder.html","id":null,"dir":"Reference","previous_headings":"","what":"Builder of CIBERSORTx Reference Matrix — Reference_Matrix_Builder","title":"Builder of CIBERSORTx Reference Matrix — Reference_Matrix_Builder","text":"function builds Reference Matrix CIBERSORTx Seurat object.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Reference_Matrix_Builder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builder of CIBERSORTx Reference Matrix — Reference_Matrix_Builder","text":"","code":"Reference_Matrix_Builder(   seurat_object,   assay = \"RNA\",   layer = \"counts\",   ident.1 = NULL,   ident.2 = NULL,   double.ident = TRUE,   double.ident.sep = \"_\",   reverse.double.ident = FALSE,   subset.ident.1 = NULL,   subset.ident.1.invert = FALSE,   subset.ident.2 = NULL,   subset.ident.2.invert = FALSE,   downsample.object.first = NULL,   downsample.object.last = NULL,   downsample.cluster = NULL,   automatic.downsample = FALSE,   check.size = FALSE,   max.matrix.size = 900,   cell.barcodes = FALSE,   file.name = \"Reference_Matrix\",   file.format = \"txt\",   file.sep = \"\\t\",   write.path = NULL,   write = TRUE,   verbose = TRUE )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Reference_Matrix_Builder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builder of CIBERSORTx Reference Matrix — Reference_Matrix_Builder","text":"seurat_object Seurat object. assay Character. name assay containing layer expression matrix. seurat_object contains multiple 'RNA' assays, may specify one use (example 'RNA2' created second 'RNA' assay named 'RNA2'. See Seurat v5 vignettes information). may also use another assay, 'SCT', want extract expression matrix projects CIBERSORTx. layer Character. name layer (formerly known slot) stores expression matrix. Must 'counts' layer CIBERSORTx. may also specify another layer 'data' (normalized counts) present specified assay want extract expression matrix projects CIBERSORTx. split layers function always join extracting expression matrix. ident.1 Character. name metadata (example, 'orig.ident', 'seurat_clusters', etc) extract identities column names Reference Matrix. NULL, uses active.ident metadata. ident.2 Character. name metadata split ident.1 identities (example ident.1 'seurat_clusters' ident.2 'orig.ident', identity 0 separated several 0_identities, corresponding orig.ident: 0_sample1, 0_sample2 etc). double.ident Logical. TRUE, column names Reference Matrix set dual identities (ident.1_ident.2). FALSE, column names set ident.1 identities. Ignored ident.2 = NULL. double.ident.sep Character. separator use identity names ident.1 ident.2. Ignored ident.2 = NULL double.ident = FALSE. reverse.double.ident Logical. TRUE, identity names ident.1 ident.2 reversed (ident.2_ident.1). Ignored ident.2 = NULL double.ident = FALSE. subset.ident.1 Character. names one several ident.1 identities select. NULL, identities used. subset.ident.1.invert Logical. TRUE, inverts selection subset.ident.1 (example, subset.ident.1 = c('0','1','2') subset.ident.1.invert = TRUE, identities except 0, 1 2 kept). Ignored subset.ident.1 = NULL. subset.ident.2 Character. names one several ident.2 identities select. NULL, identities used. Ignored ident.2 = NULL. subset.ident.2.invert Logical. TRUE, inverts selection subset.ident.2 (example, subset.ident.2 = c('patient1','patient4') subset.ident.2.invert = TRUE, identities except patient 1 patient 4 kept). Ignored subset.ident.2 = NULL ident.2 = NULL. downsample.object.first Numeric. number cells downsample entire seurat_object (identity) subsetting subset.ident.1 /subset.ident.2. NULL, cells used. downsample.object.last Numeric. number cells downsample entire seurat_object subsetting subset.ident.1 /subset.ident.2. NULL, cells used. downsample.cluster Numeric. number cells downsample ident.1 identity. performed downsample.object.last. NULL, cells used. automatic.downsample Logical. TRUE, automatically downsamples seurat_object Reference Matrix file written disk just max.matrix.size limit (empirically estimated). Performed last. Ignored check.size = TRUE write = FALSE. Please report issue see significant difference file size written disk max.matrix.size (example, max.matrix.size set 200 MB file 400 MB 100 MB). check.size Logical. TRUE, prints estimated size Reference Matrix file written disk number cells downsample need . max.matrix.size Numeric. maximum size Reference Matrix file written disk MB. stop function Reference Matrix file written disk estimated limit, automatic.downsample = TRUE, downsample seurat_object instead Reference Matrix written disk size limit. Ignored write = FALSE. cell.barcodes Logical. Must FALSE CIBERSORTx. TRUE, keeps cell barcodes rename cell identities, want extract expression matrix projects CIBERSORTx. file.name Character. name Reference Matrix file written disk. Must contain space CIBERSORTx, function automatically replace space underscore. Ignored check.size = TRUE write = FALSE. file.format Character. format Reference Matrix file written disk. Must 'txt' 'tsv' CIBERSORTx, may also specify 'csv' example, want extract expression matrix projects CIBERSORTx. Accepts format fwrite function accept. Ignored check.size = TRUE write = FALSE. file.sep Character. separator use Reference Matrix file written disk. Must tabulation CIBERSORTx, may also specify comma example, want extract expression matrix projects CIBERSORTx. Accepts separator fwrite function accept. Ignored check.size = TRUE write = FALSE. write.path Character. path write Reference Matrix . NULL, uses current working directory. Ignored check.size = TRUE write = FALSE. write Logical. TRUE, writes disk Reference Matrix file. Ignored check.size = TRUE. verbose Logical. FALSE, print progress messages output, warnings errors still printed.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Reference_Matrix_Builder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builder of CIBERSORTx Reference Matrix — Reference_Matrix_Builder","text":"data.table object containing raw counts seurat_object specified assay layer, cell identities barcodes column names feature names first column. write = TRUE, data.table object also written disk. check.size = TRUE, instead print estimated size Reference Matrix file written disk number cells downsample need .","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Reference_Matrix_Builder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builder of CIBERSORTx Reference Matrix — Reference_Matrix_Builder","text":"","code":"# Prepare data pbmc3k <- Right_Data(\"pbmc3k\")  # Example 1: refmat <- Reference_Matrix_Builder(pbmc3k,                                    ident.1 = \"seurat_annotations\",                                    ident.2 = \"orig.ident\",                                    downsample.object.first = 1500,                                    subset.ident.1 = c(\"Naive CD4 T\",                                                       \"Memory CD4 T\",                                                       \"CD8 T\",                                                       \"NK\"),                                    subset.ident.2 = \"Donor_2\",                                    subset.ident.2.invert = TRUE,                                    write = FALSE) #> Starting...  #> Downsampling...  #> Subsetting...  #> Subsetting...  #> Extracting the expression matrix...  #> Building the data.table...  #> Cleaning...  #> Done.  refmat[1:5, 1:5] #>             Gene CD8 T_Donor_1 CD8 T_Donor_1 CD8 T_Donor_3 Naive CD4 T_Donor_3 #>           <char>         <num>         <num>         <num>               <num> #> 1:    AL627309.1             0             0             0                   0 #> 2:    AP006222.2             0             0             0                   0 #> 3: RP11-206L10.2             0             0             0                   0 #> 4: RP11-206L10.9             0             0             0                   0 #> 5:     LINC00115             0             0             0                   0  # Example 2: Reference_Matrix_Builder(pbmc3k,                          check.size = TRUE,                          max.matrix.size = 40) #> Starting...  #> Extracting the expression matrix...  #> Current estimated Reference Matrix size on CIBERSORTx web portal is between 71 and 74 MB : #> Matrix of 2700 cells by 13714 features #> You may want to downsample your Seurat object to 1429 cells for a Reference Matrix under 40 MB"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Right_Data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data loader for vignettes — Right_Data","title":"Data loader for vignettes — Right_Data","text":"function downloads prepares data used vignettes. main advantage using data loader nothing stored package, therefore remains lightweight even use large objects tutorials. Anyone interested adding dataset function use package's vignettes (provided raw data can downloaded reputable source, NCBI's GEO FTP site example) can open issue GitHub.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Right_Data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data loader for vignettes — Right_Data","text":"","code":"Right_Data(dataset = NULL, list.datasets = FALSE)"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Right_Data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data loader for vignettes — Right_Data","text":"dataset Character. name dataset load. list.datasets Logical. TRUE, prints names descriptions available datasets.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Right_Data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data loader for vignettes — Right_Data","text":"object various classes, depending dataset, message containing names descriptions available datasets.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Right_Data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data loader for vignettes — Right_Data","text":"","code":"Right_Data(list.datasets = TRUE) #> Available datasets: #> \"pbmc3k\"   a Seurat v4 object of 2700 cells by 13714 genes  pbmc3k = Right_Data(\"pbmc3k\") pbmc3k #> An object of class Seurat  #> 13714 features across 2700 samples within 1 assay  #> Active assay: RNA (13714 features, 2000 variable features) #>  2 layers present: counts, data #>  1 dimensional reduction calculated: umap"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Right_DietSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce the size of a Seurat object — Right_DietSeurat","title":"Reduce the size of a Seurat object — Right_DietSeurat","text":"Seurat v5 release, DietSeurat remove data scale.data layers, resulting objects little reduction size. function created purpose restore DietSeurat's proper behavior function fixed Seurat's dev team, well offer new options ability subset cells keep variable features.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Right_DietSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce the size of a Seurat object — Right_DietSeurat","text":"","code":"Right_DietSeurat(   seurat_object,   idents = NULL,   cells = NULL,   features = NULL,   dimreducs = NULL,   graphs = NULL,   variable.features = FALSE,   misc = TRUE,   split.counts.layer = NULL,   data.layer = FALSE,   scale.layer = FALSE,   SCTAssay = FALSE )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Right_DietSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce the size of a Seurat object — Right_DietSeurat","text":"seurat_object Seurat object. idents Character. names one several metadata (example, 'orig.ident', 'seurat_clusters', etc) keep diet object. NULL, metadata kept. cells Character. names one several cells keep diet object. NULL, cells kept. features Character. names one several features keep diet object. NULL, features kept. dimreducs Character. names one several reductions keep diet object. NULL, reductions removed. Please note subset features remove principal components (PC) calculated, 'PCA' reduction kept, even provided, feature.loadings slot empty. intended behavior. graphs Character. names one several graphs keep diet object. NULL, graphs removed. variable.features Logical. TRUE, variable features slot kept diet object. Please note keep subset features, variable features also subset, remove features variable features calculated, variable features kept even TRUE. intended behavior. misc Logical. TRUE, misc slot kept diet object. split.counts.layer Character. name metadata (example, 'orig.ident', 'seurat_clusters', etc) split 'counts' layer 'RNA' assay need downstream analysis. NULL, diet object single 'counts' layer, even original object split 'counts' layers. data.layer Logical. TRUE, 'data' layer 'RNA' assay kept diet object present. 'counts' layer, split 'data' layers, joined single 'data' layer unless split.counts.layer provided. scale.layer Logical. TRUE, 'scale.data' layer 'RNA' assay kept diet object present. SCTAssay Logical. TRUE, 'SCT' assay kept diet object present.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/Right_DietSeurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce the size of a Seurat object — Right_DietSeurat","text":"Seurat object, hopefully smaller, class Assay5 'RNA' assay specified layers slots.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/curveSmoothers.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot of log-transformed counts, and average fitted GAM smoother curves along pseudotime — curveSmoothers","title":"Scatterplot of log-transformed counts, and average fitted GAM smoother curves along pseudotime — curveSmoothers","text":"function generates scatterplot log-transformed counts, displays top average fitted GAM smoother curves, computed using fitGAM, along pseudotime, reworked version link[tradeSeq]{plotSmoothers}, allows plotting multiple genes simultaneously, well selected lineages conditions. Additionally, scatterplot rasterized reduce size output file branching points may displayed curve.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/curveSmoothers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot of log-transformed counts, and average fitted GAM smoother curves along pseudotime — curveSmoothers","text":"","code":"curveSmoothers(   models,   predictSmooth.df = NULL,   genes = if (is.null(predictSmooth.df)) NA else unique(predictSmooth.df$gene),   lineages,   conditions = NULL,   facets = c(\"genes\", \"conditions\"),   nPoints = 100,   branch.points = NULL,   points.size = 3,   points.alpha = 0.8,   curves.width = 1,   curves.alpha = 1,   facets.scales = \"free\",   facets.axes = \"all\",   colors = NULL,   nrow = floor(sqrt(length(genes))) )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/curveSmoothers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot of log-transformed counts, and average fitted GAM smoother curves along pseudotime — curveSmoothers","text":"models SingleCellExperiment object containing fitted GAM smoothers, computed using fitGAM, without conditions provided. predictSmooth.df data.frame object containing average fitted GAM smoothers, computed using predictSmooth nPoints, lineages tidy = TRUE. NULL, average fitted GAM smoothers internally computed. genes Character. names one several genes plot log-transformed counts average fitted GAM smoothers . lineages Numeric. indices lineages (example, c(1, 5), 2:4 etc) plot log-transformed counts, average fitted GAM smoothers pseudotime values . conditions Character. names one several conditions identities select. NULL, identities used, unique condition plotted, lineages provided (example, four lineages three conditions, twelve curves plotted). Ignored models object computed using fitGAM without conditions. Please note models object computed using fitGAM conditions, possible plot global lineages (without conditions), need compute new models object using fitGAM without conditions. due limitation predictSmooth returns average fitted GAM smoothers (models object computed conditions, function always mean fitted GAM smoothers lineage condition independently). facets Character. names one two metadata among 'genes', 'lineages' /'conditions' facet plot. one metadata provided, facet_wrap used, two provided, facet_grid used, first metadata rows second columns. models object computed using fitGAM without conditions, facet 'conditions'. Please note models object computed using fitGAM conditions, possible plot global lineages (without conditions), need compute new models object using fitGAM without conditions. due limitation predictSmooth returns average fitted GAM smoothers (models object computed conditions, function always mean fitted GAM smoothers lineage condition independently). nPoints Numeric. (predictSmooth documentation) number points used create grid along smoother lineage. branch.points Numeric, Character List. Branching points may shown fitted GAM smoother curves, partition lineages help visualize differences. Either one pseudotime values plot branching points , /one several values containing 'knot' followed number (example, 'knot2', 'knot4' etc), correspond knots (k) input fitGAM divide lineage segments; function extract pseudotime values knot number plot branching points. Mixing two options possible (example, c(4.3, 7, 'knot4')). may also provide list containing two options, named one several identities single metadata among 'genes', 'lineages' 'conditions' (example, list('CD4' = c(2, 'knot5')) plot branching points CD4 curves). lineages, list names need provided 'Lineage' (capital L) followed index (example, list('Lineage1' = c(4.3, 'knot4'), 'Lineage2' = c('knot2', 7, 9)), plot branching points lineage 1 2 curves). Finally, may also provide identities corresponding several metadata time pasting together '_' (example, list('Lineage1_CD4' = c(1, 'knot1', 12)), plot branching points lineage 1 CD4 curves). points.size Numeric. size log-transformed count points. points.alpha Numeric. transparency log-transformed count points. curves.width Numeric. width fitted GAM smoother curves. curves.alpha Numeric. transparency fitted GAM smoother curves. facets.scales Character. (facet_grid documentation) scales shared across facets (default, \"fixed\"), vary across rows (\"free_x\"), columns (\"free_y\"), rows columns (\"free\")? facets.axes Character. (facet_grid documentation) Determines axes drawn. \"margins\" (default), axes drawn exterior margins. \"all_x\" \"all_y\" draw respective axes interior panels , whereas \"\" draw axes panels. colors Character. color names identity metadata excluded facets among 'genes', 'lineages' /'conditions' (example, facets = c('genes', 'conditions'), colors lineages provided, facets = 'lineages', colors genes times conditions provided). NULL, uses Seurat's default colors. nrow Numeric. number rows use facets. Ignored two metadata provided facets.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/curveSmoothers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatterplot of log-transformed counts, and average fitted GAM smoother curves along pseudotime — curveSmoothers","text":"ggplot2 object.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/heatmapSmoothers.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of average fitted GAM smoothers along pseudotime — heatmapSmoothers","title":"Heatmap of average fitted GAM smoothers along pseudotime — heatmapSmoothers","text":"function generates heatmap visualize gene fitted GAM smoothers, computed using fitGAM, along pseudotime.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/heatmapSmoothers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of average fitted GAM smoothers along pseudotime — heatmapSmoothers","text":"","code":"heatmapSmoothers(   sds,   models,   predictSmooth.df = NULL,   genes = if (is.null(predictSmooth.df)) NA else unique(predictSmooth.df$gene),   lineages,   lineages.to.remove = NULL,   conditions = NULL,   clusters = NULL,   nPoints = 1000,   branch.points = NULL,   pseudotime.zoom = NULL,   rescale = TRUE,   rescale.range = c(0, 3),   kmeans.repeats = 100,   cluster.genes = TRUE,   genes.kmeans = 1,   outer.border = TRUE,   pseudotime.type = \"relative\",   density.type = \"relative\",   show.pseudotime = TRUE,   show.density = TRUE,   show.density.pseudotime.values = TRUE,   data.colors = \"Inferno\",   pseudotime.colors = \"Viridis\",   clusters.colors = NULL,   genes.names.size = 6,   genes.names.style = \"italic\",   show.density.legend = TRUE,   density.legend.name = \"Clusters\",   heatmap.width = 3,   heatmap.height = length(genes),   density.height = 1,   raster = TRUE,   return.grob = TRUE,   ... )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/heatmapSmoothers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of average fitted GAM smoothers along pseudotime — heatmapSmoothers","text":"sds SingleCellExperiment object containing pseudotime values one several lineages, computed using slingshot (usually, input object fitGAM). models SingleCellExperiment object containing fitted GAM smoothers, computed using fitGAM, without conditions provided. predictSmooth.df data.frame object containing average fitted GAM smoothers, computed using predictSmooth nPoints, lineages tidy = TRUE. NULL, average fitted GAM smoothers internally computed. genes Character. names one several genes plot average fitted GAM smoothers . lineages Numeric. indices lineages (example, c(1, 5), 2:4 etc) plot average fitted GAM smoothers pseudotime values . Please note gene clustering, like use specific lineage reference, need set first element (example, six lineages like cluster genes based lineage 5, input lineages = c(5, 1:4, 6)). due limitation ComplexHeatmap clusters rows concatenated HeatmapList objects (always based first element). lineages..remove Numeric. lineages exclude rescale. Useful want remove influence lineages comparison. conditions Character. names one several conditions identities select. NULL, identities used, unique condition plotted, lineages provided (example, four lineages three conditions, twelve heatmaps plotted). Please note gene clustering, like use specific condition reference, need set first element (example, three unique conditions (example, 'control', 'IFNg' 'TGFb') like cluster genes based 'IFNg', input conditions = c('IFNg', 'control', 'TGFb')). due limitation ComplexHeatmap clusters rows concatenated HeatmapList objects (always based first element). Ignored models object computed using fitGAM without conditions. Please note models object computed using fitGAM conditions, possible plot global lineages (without conditions), need compute new models object using fitGAM without conditions. due limitation predictSmooth returns average fitted GAM smoothers (models object computed conditions, function always mean fitted GAM smoothers lineage condition independently). clusters Character Factor. Either name metadata present sds object (example, 'annotations', 'seurat_clusters', etc) plot cell densities , identities, character factor, length equal number cells sds object. nPoints Numeric. (predictSmooth documentation) number points used create grid along smoother lineage. branch.points Numeric, Character List. Branching points may shown cell density plot heatmap, partition lineages help visualize differences. Either one pseudotime values plot branching points , /one several values containing 'knot' followed number (example, 'knot2', 'knot4' etc), correspond knots (k) input fitGAM divide lineage segments; function extract pseudotime values knot number plot branching points. Mixing two options possible (example, c(4.3, 7, 'knot4')). may also provide list containing two options, named one several identities single metadata among 'lineages' 'conditions' (example, conditions = c('Control', 'Treated'), list('Control' = c(2, 'knot5')) plot branching points Control cell density plots heatmaps). lineages, list names need provided 'Lineage' (capital L) followed index (example, list('Lineage1' = c(4.3, 'knot4'), 'Lineage2' = c('knot2', 7, 9)), plot branching points lineages 1 2 cell density plots heatmaps). Finally, may also provide identities corresponding several metadata time pasting together '_' (example, list('Lineage1_Treated' = c(1, 'knot1', 12)), plot branching points lineage 1 Treated cell density plots heatmaps). pseudotime.zoom Numeric, Character List. Oftentimes may want zoom specific region lineage better visualize differences. Either two pseudotime values zoom , /'min' 'max' zoom respectively minimum maximum pseudotime values lineage, /'knot' followed number (example, 'knot2', 'knot4' etc), correspond knots (k) input fitGAM divide lineage segments; function extract pseudotime values knot number zoom , /'knot' followed number, + - another number, set zoom around knots adding subtracting pseudotime value knot (example, c('knot3-5', 'knot4+2'), corresponds pseudotime value third knot minus 5, pseudotime value fourth knot plus 2). Mixing two four options possible (example, c(5.5, 'knot4'), c('knot3-1', 'max')). may also provide list containing two four options, named one several identities single metadata among 'lineages' 'conditions' (example, conditions = c('Control', 'Treated'), list('Control' = c(2, 'knot5')) zoom Control cell density plots heatmaps). lineages, list names need provided 'Lineage' (capital L) followed index (example, list('Lineage1' = c('min', 'knot2+3'), 'Lineage2' = c('knot2', 7)), zoom lineages 1 2 cell density plots heatmaps). Finally, may also provide identities corresponding several metadata time pasting together '_' (example, list('Lineage1_Treated' = c('knot1+1', 'max')), zoom lineage 1 Treated cell density plots heatmaps). rescale Logical. TRUE, average fitted GAM smoothers adjusted using rescale first numerical value rescale.range (lowest value) second numerical value (highest value). different scale compare values mean standard deviation therefore Z-score, refits value (independently gene) order visualize genes dimension regardless differences fitted GAM smoothers. rescale.range Numeric. minimum maximum values resize average fitted GAM smoothers internally passed rescale. values arbitrary change visualization, values legend. Ignored rescale = FALSE. kmeans.repeats Numeric. number runs get consensus K-means clustering. Ignored genes.kmeans = 1. cluster.genes Logical Function. TRUE, function cluster genes. may also pass hclust dendrogram object contains clustering. genes.kmeans Numeric. number slices use gene K-means clustering. outer.border Logical. TRUE, function display outer border around heatmap. pseudotime.type Character. Determines pseudotime.colors range scale lineage: either 'independent', lineage's pseudotime.colors range independent others (.e., minimum maximum values identical lineage, regardless trajectory length differences), 'relative', lineage's pseudotime.colors range scaled relative highest pseudotime value (.e., longest trajectory, reflecting differences trajectory lengths). density.type Character. Determines cell density scale (height) lineage: either 'independent,' lineage's cell density independent others (.e., maximum density height identical lineage, regardless differences cell counts contributing trajectory), 'relative,' lineage's density scale relative highest cell density (.e., highest cell counts, reflecting differences number cells contributing trajectory). show.pseudotime Logical. TRUE, pseudotime range shown heatmap. show.density Logical. TRUE, cell density plot shown. show.density.pseudotime.values Logical. TRUE, pseudotime values shown cell density plot. data.colors Character. Either two color names, corresponding lowest highest values average fitted GAM smoothers internally passed colorRamp2, name palette internally passed hcl_palette colorRamp2 ('Inferno', 'Berlin', 'Viridis' etc, check hcl.pals palettes available). pseudotime.colors Character. Either name palette internally passed hcl_palette colorRamp2 ('Inferno', 'Berlin', 'Viridis' etc, check hcl.pals palettes available), two color names, corresponding lowest highest pseudotime values, additional color names beyond two either spaced regular intervals unnamed (example, c('blue', 'green', 'yellow', 'red') spaced 0%, 33%, 66% 100%) named pseudotime value (example, c('orange', \"12\" = 'white', 'royalblue')) named 'knot' followed number (example, 'knot2', 'knot4' etc), correspond knots (k) input fitGAM divide lineage segments; function extract pseudotime values knot number (example, c('firebrick', 'knot3' = 'lightgrey', 'gold')). Note first last color names need named always correspond lowest highest pseudotime values. clusters.colors Character. color names identity clusters. NULL, uses Seurat's default colors. Ignored show.density = FALSE. genes.names.size Numeric. font size gene names. Set 0 remove . genes.names.style Character. font face gene names. Gene nomenclature used almost scientific journals require gene names italicized, therefore parameter default set 'italic'. Use 'plain' revert back regular font face. show.density.legend Logical. TRUE, cell density plot legend shown. density.legend.name Character. name cell density plot legend. heatmap.width Numeric. width heatmap. heatmap.height Numeric. height heatmap. density.height Numeric. height cell density plot. raster Logical. (Heatmap documentation) TRUE, function render heatmap body raster image. helps reduce file size matrix huge. return.grob Logical. TRUE, function return grob (gTree object, printable using grid.draw). allows capture cell density plot (ggplot2 object) heatmap (HeatmapList object) single object can customized using grid functions included plots complex layouts using plot_grid. FALSE, function return HeatmapList object, can used extract various parameters, row clustering values using row_order. Please note affects returned object assigned variable, > htmp <- heatmapSmoothers(...), function called without assignment, > heatmapSmoothers(...). ... Additional arguments passed Heatmap, show_parent_dend_line, clustering_method_rows, etc, accepts parameter already internally passed Heatmap (example, outer.border sets border parameter Heatmap, get error try pass border parameter heatmapSmoothers).","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/heatmapSmoothers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of average fitted GAM smoothers along pseudotime — heatmapSmoothers","text":"grob (gTree object, printable using grid.draw), HeatmapList object.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/ncRNA_human.html","id":null,"dir":"Reference","previous_headings":"","what":"Human non-coding genes — ncRNA_human","title":"Human non-coding genes — ncRNA_human","text":"character vector containing known non-coding RNA genes human genome may 10th 2024.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/ncRNA_human.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human non-coding genes — ncRNA_human","text":"","code":"ncRNA_human"},{"path":[]},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/ncRNA_human.html","id":"ncrna-human","dir":"Reference","previous_headings":"","what":"ncRNA_human","title":"Human non-coding genes — ncRNA_human","text":"character vector 14574 elements.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/ncRNA_human.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Human non-coding genes — ncRNA_human","text":"https://www.genenames.org/data/genegroup/#!/group/475","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/pseudogenes_mouse.html","id":null,"dir":"Reference","previous_headings":"","what":"Mouse pseudogenes — pseudogenes_mouse","title":"Mouse pseudogenes — pseudogenes_mouse","text":"character vector containing known pseudogenes mouse genome may 10th 2024.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/pseudogenes_mouse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mouse pseudogenes — pseudogenes_mouse","text":"","code":"pseudogenes_mouse"},{"path":[]},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/pseudogenes_mouse.html","id":"pseudogenes-mouse","dir":"Reference","previous_headings":"","what":"pseudogenes_mouse","title":"Mouse pseudogenes — pseudogenes_mouse","text":"character vector 3663 elements.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/pseudogenes_mouse.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mouse pseudogenes — pseudogenes_mouse","text":"https://rna.sysu.edu.cn/dreamBase2/scrna.php?SClade=mammal&SOrganism=mm10&SDataId=0&SProteinID=0","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/tradeSeqPreprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove genes with very low expression for tradeSeq analysis — tradeSeqPreprocess","title":"Remove genes with very low expression for tradeSeq analysis — tradeSeqPreprocess","text":"functions fitGAM evaluateK, used analyze gene expression along trajectories, usually require considerable calculation power (access computer clusters) time (days) complete. one might assume computing time uniform across genes, appears however model fitting takes seconds less vast majority genes, small fraction disproportionately affects calculation time, model fitting taking hours even days single gene. examination shows genes among lowest expressed, inverse correlation number cells non-zero count particular gene model fitting time, becomes exponentially longer number expressing cells tends towards zero. Based observations, function built considerably speed computing time / lower computing power requirements retaining much information possible. filters genes certain expression threshold (10 expressing cells default), effectively removing genes whose expression likely just noise (thus cause lengthy difficult model fitting), rather signal biological significance. especially common cells subset larger object trajectory inference, expression matrix contains many zero near-zero expression genes, primarily expressed excluded cells. Additionally, offers second method filtering, computing resources still limiting factor reduction number genes needed, retaining top genes according deviance, provides better information estimate selecting variable genes, latter tends still include genes near-zero expressing cells. Finally, fitGAM evaluateK run condition, also allows filtering based specific metadata used.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/tradeSeqPreprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove genes with very low expression for tradeSeq analysis — tradeSeqPreprocess","text":"","code":"tradeSeqPreprocess(   sds,   min.cells = 10,   nb.genes = NULL,   condition = NULL,   filter.mito = FALSE,   filter.ribo = FALSE,   filter.ncRNA = FALSE,   species = \"human\",   plot.genes = TRUE,   output.data = FALSE )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/tradeSeqPreprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove genes with very low expression for tradeSeq analysis — tradeSeqPreprocess","text":"sds SingleCellExperiment object containing pseudotime values one several lineages, computed using slingshot (usually, input object fitGAM). min.cells Numeric. minimum number cells 1 count keep gene. nb.genes Numeric. maximum number genes keep according deviance, computed scry{devianceFeatureSelection} internally. NULL, genes kept. condition Character Factor. Either name metadata present sds (example, 'treatment', 'disease', etc) subset object separately remove lowly expressed genes, identities, character factor, length equal number cells sds. filter.mito Logical. TRUE, mitochondrial features filtered . filter.ribo Logical. TRUE, ribosomal features filtered . filter.ncRNA Logical. TRUE, non-coding RNA features filtered . species Character. species name filter non-coding RNA features. 'human', dataset named ncRNA_human built genenames database used reference. 'mouse', pseudogenes filtered based dataset named pseudogenes_mouse built dreamBase2 database. datasets loaded RightOmicsTools may checked information. plot.genes Logical. TRUE, bar plot showing number genes removed according number cells least 1 count displayed. output.data Logical. TRUE, function return list containing filtered SingleCellExperiment object, data.frame object number cells least 1 count removed gene, data.frame object data used build bar plot.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/tradeSeqPreprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove genes with very low expression for tradeSeq analysis — tradeSeqPreprocess","text":"filtered SingleCellExperiment object, list containing filtered SingleCellExperiment object, data.frame object number cells least 1 count removed gene, data.frame object data used build bar plot.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/tradeSeqTests.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform tradeSeq tests in parallel — tradeSeqTests","title":"Perform tradeSeq tests in parallel — tradeSeqTests","text":"function wrapper around tradeSeq test functions, associationTest conditionTest, allows multiple tests performed simultaneously, necessary parameters specified internally. also organizes output test separate list elements, making easy access results. Finally, calculates adjusted p-value orders based decreasing Waldstat.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/tradeSeqTests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform tradeSeq tests in parallel — tradeSeqTests","text":"","code":"tradeSeqTests(   models,   tests = c(\"assoc\", \"pattern\", \"diffend\", \"early\", \"startvsend\", \"condition\"),   global = TRUE,   pairwise = TRUE,   lineages = TRUE,   l2fc = 0,   eigen.thresh = 0.01,   n.points = 2 * nknots(models),   knots = NULL,   pseudotime.values = NULL,   parallelized = FALSE,   BPPARAM = NULL,   tidy = TRUE,   raw = FALSE,   verbose = TRUE )"},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/tradeSeqTests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform tradeSeq tests in parallel — tradeSeqTests","text":"models SingleCellExperiment object containing fitted GAM smoothers, computed using fitGAM, without conditions provided. tests Character. names one several tests perform. may provide partial names, 'assoc' associationTest, long single match found. available tests associationTest, patternTest, diffEndTest, earlyDETest, startVsEndTest conditionTest. conditionTest ignored models computed using fitGAM without conditions. global Logical. (earlyDETest/startVsEndTest documentation) TRUE, test pairwise comparisons/lineages simultaneously. pairwise Logical. (earlyDETest documentation) TRUE, test pairwise comparisons independently. Ignored tests pairwise. lineages Logical. (startVsEndTest documentation) TRUE, test lineages independently. Ignored tests lineages. l2fc Numeric. (earlyDETest documentation) log2 fold change threshold test . Note, affect global test pairwise comparisons. eigen.thresh Numeric. (earlyDETest documentation) Eigenvalue threshold inverting variance-covariance matrix coefficients use calculating Wald test statistics. Lower values lenient adding information also decrease computational stability. argument general changed user provided back-compatability. Set 1e-8 reproduce results older version 'tradeSeq'. Ignored tests eigen.thresh. n.points Numeric. (earlyDETest documentation) number points compared lineages. Defaults twice number knots. Ignored tests n.points. knots Numeric List. (earlyDETest documentation) vector length 2 specifying knots start end region interest. may also provide list multiple elements (example, list(c(2,4), c(3,4))) repeat test multiple sets knots. Ignored tests knots. pseudotime.values Numeric List. (startVsEndTest documentation) vector length 2, specifying two pseudotime values compared , every lineage trajectory. @details Note test assumes lineages start pseudotime value zero, starting point end point compared. may also provide list multiple elements (example, list(c(8,12), c(6,14))) repeat test multiple sets pseudotime values. Ignored tests pseudotime.values. parallelized Logical. TRUE, tests parallelized using BiocParallel. Please note parallelization complex depends operating system (Windows users might see gain might even experience slowdown). BPPARAM BiocParallelParam object used parallelization. NULL parallelized = TRUE, function use SerialParam object configured use single worker (core) therefore parallelized, order prevent accidental use large computation resources. Ignored parallelized = FALSE. tidy Logical. TRUE, list returned, data.frame objects corresponding test divided global, pairwise /lineage comparison results. adjusted p-value (False Discovery Rate) also calculated data.frame object ordered based decreasing Waldstat. raw Logical. TRUE, list returned, data.frame objects corresponding test results. verbose Logical. FALSE, print progress messages output, warnings errors still printed.","code":""},{"path":"https://alexis-varin.github.io/RightOmicsTools/reference/tradeSeqTests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform tradeSeq tests in parallel — tradeSeqTests","text":"list, data.frame objects corresponding test results /data.frame objects corresponding test global, pairwise /lineage comparison results.","code":""}]
